<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="wei.tools.dao.EmotionalCycleMapper">
  <resultMap id="BaseResultMap" type="wei.tools.model.EmotionalCycle">
    <result column="date_str" jdbcType="VARCHAR" property="dateStr" />
    <result column="up_count" jdbcType="INTEGER" property="upCount" />
    <result column="drop_count" jdbcType="INTEGER" property="dropCount" />
    <result column="up_limit" jdbcType="INTEGER" property="upLimit" />
    <result column="drop_limit" jdbcType="INTEGER" property="dropLimit" />
    <result column="broken_limit" jdbcType="INTEGER" property="brokenLimit" />
    <result column="first_limit" jdbcType="INTEGER" property="firstLimit" />
    <result column="second_limit" jdbcType="INTEGER" property="secondLimit" />
    <result column="third_limit" jdbcType="INTEGER" property="thirdLimit" />
    <result column="third_limit_str" jdbcType="VARCHAR" property="thirdLimitStr" />
    <result column="more_limit" jdbcType="INTEGER" property="moreLimit" />
    <result column="more_limit_str" jdbcType="VARCHAR" property="moreLimitStr" />
    <result column="earning_limit_rate" jdbcType="DECIMAL" property="earningLimitRate" />
    <result column="earning_first_limit_rate" jdbcType="DECIMAL" property="earningFirstLimitRate" />
    <result column="earning_sequence_limit_rate" jdbcType="DECIMAL" property="earningSequenceLimitRate" />
    <result column="earning_broken_limit_rate" jdbcType="DECIMAL" property="earningBrokenLimitRate" />
    <result column="earning_hot_rate" jdbcType="DECIMAL" property="earningHotRate" />
    <result column="hot_business_order_limit" jdbcType="VARCHAR" property="hotBusinessOrderLimit" />
    <result column="hot_business_order_rose" jdbcType="VARCHAR" property="hotBusinessOrderRose" />
    <result column="hot_theme_order_limit" jdbcType="VARCHAR" property="hotThemeOrderLimit" />
    <result column="hot_theme_order_rose" jdbcType="VARCHAR" property="hotThemeOrderRose" />
  </resultMap>
  <insert id="insertOrUpdate" parameterType="wei.tools.model.EmotionalCycle">
    insert into t_emotional_cycle (date_str, up_count, drop_count,
      up_limit, drop_limit, broken_limit,
      first_limit, second_limit, third_limit, third_limit_str,
      more_limit, more_limit_str, earning_limit_rate, earning_first_limit_rate,
      earning_sequence_limit_rate, earning_broken_limit_rate,earning_hot_rate,
      hot_business_order_limit, hot_business_order_rose,
      hot_theme_order_limit, hot_theme_order_rose)
    values (#{dateStr,jdbcType=VARCHAR}, #{upCount,jdbcType=INTEGER}, #{dropCount,jdbcType=INTEGER}, 
      #{upLimit,jdbcType=INTEGER}, #{dropLimit,jdbcType=INTEGER}, #{brokenLimit,jdbcType=INTEGER}, 
      #{firstLimit,jdbcType=INTEGER}, #{secondLimit,jdbcType=INTEGER}, #{thirdLimit,jdbcType=INTEGER},  #{thirdLimitStr,jdbcType=VARCHAR},
      #{moreLimit,jdbcType=INTEGER}, #{moreLimitStr,jdbcType=VARCHAR}, #{earningLimitRate,jdbcType=DECIMAL}, #{earningFirstLimitRate,jdbcType=DECIMAL},
      #{earningSequenceLimitRate,jdbcType=DECIMAL}, #{earningBrokenLimitRate,jdbcType=DECIMAL},#{earningHotRate,jdbcType=DECIMAL},
      #{hotBusinessOrderLimit,jdbcType=VARCHAR}, #{hotBusinessOrderRose,jdbcType=VARCHAR}, 
      #{hotThemeOrderLimit,jdbcType=VARCHAR}, #{hotThemeOrderRose,jdbcType=VARCHAR})
    ON DUPLICATE KEY UPDATE date_str=values(date_str),up_count=values(up_count),drop_count=values(drop_count),up_limit=values(up_limit),drop_limit=values(drop_limit)
    ,broken_limit=values(broken_limit),first_limit=values(first_limit),second_limit=values(second_limit),third_limit=values(third_limit)
    ,third_limit_str=values(third_limit_str),more_limit=values(more_limit),more_limit_str=values(more_limit_str),earning_limit_rate=values(earning_limit_rate),earning_first_limit_rate=values(earning_first_limit_rate)
    ,earning_sequence_limit_rate=values(earning_sequence_limit_rate),earning_broken_limit_rate=values(earning_broken_limit_rate),earning_hot_rate=values(earning_hot_rate)
    ,hot_business_order_limit=values(hot_business_order_limit),hot_business_order_rose=values(hot_business_order_rose),hot_theme_order_limit=values(hot_theme_order_limit)
    ,hot_theme_order_rose=values(hot_theme_order_rose)
  </insert>
  <select id="findAll" resultMap="BaseResultMap">
    select date_str, up_count, drop_count, up_limit, drop_limit, broken_limit, first_limit, 
    second_limit, third_limit, third_limit_str,more_limit,more_limit_str, earning_limit_rate, earning_first_limit_rate,
    earning_sequence_limit_rate, earning_broken_limit_rate, earning_hot_rate,
    hot_business_order_limit,
    hot_business_order_rose, hot_theme_order_limit, hot_theme_order_rose
    from t_emotional_cycle
  </select>


  <select id="selectByDate"  resultMap="BaseResultMap">
    select *
    from t_emotional_cycle
    where date_str = #{dateStr}
  </select>

  <update id="fixUpdateEarningRate" parameterType="wei.tools.model.BrokenLimit">
    update t_emotional_cycle
    set earning_limit_rate = #{earningLimitRate,jdbcType=VARCHAR},
      earning_sequence_limit_rate = #{earningSequenceLimitRate,jdbcType=VARCHAR},
      earning_broken_limit_rate = #{earningBrokenLimitRate,jdbcType=VARCHAR},
      earning_hot_rate = #{earningHotRate,jdbcType=VARCHAR}
    where date_str = #{dateStr,jdbcType=INTEGER}
  </update>

</mapper>